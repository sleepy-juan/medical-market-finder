syntax = "proto3";
package khidi.khidi;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "khidi/params.proto";
import "khidi/hy_marketsize.proto";
import "khidi/hy_partner.proto";
import "khidi/hy_import.proto";
import "khidi/hy_export.proto";
import "khidi/hy_all_names_of.proto";
// this line is used by starport scaffolding # 1

option go_package = "khidi/x/khidi/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/khidi/khidi/params";
  }
  // Queries a HyMarketsize by index.
	rpc HyMarketsize(QueryGetHyMarketsizeRequest) returns (QueryGetHyMarketsizeResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_marketsize/{index}";
	}

	// Queries a list of HyMarketsize items.
	rpc HyMarketsizeAll(QueryAllHyMarketsizeRequest) returns (QueryAllHyMarketsizeResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_marketsize";
	}

// Queries a HyPartner by index.
	rpc HyPartner(QueryGetHyPartnerRequest) returns (QueryGetHyPartnerResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_partner/{index}";
	}

	// Queries a list of HyPartner items.
	rpc HyPartnerAll(QueryAllHyPartnerRequest) returns (QueryAllHyPartnerResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_partner";
	}

// Queries a HyImport by index.
	rpc HyImport(QueryGetHyImportRequest) returns (QueryGetHyImportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_import/{index}";
	}

	// Queries a list of HyImport items.
	rpc HyImportAll(QueryAllHyImportRequest) returns (QueryAllHyImportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_import";
	}

// Queries a HyExport by index.
	rpc HyExport(QueryGetHyExportRequest) returns (QueryGetHyExportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_export/{index}";
	}

	// Queries a list of HyExport items.
	rpc HyExportAll(QueryAllHyExportRequest) returns (QueryAllHyExportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_export";
	}

// Queries a list of HyRecentMarketsize items.
	rpc HyRecentMarketsize(QueryHyRecentMarketsizeRequest) returns (QueryHyRecentMarketsizeResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_recent_marketsize/{name}/{group}";
	}

// Queries a list of HyRecentPartner items.
	rpc HyRecentPartner(QueryHyRecentPartnerRequest) returns (QueryHyRecentPartnerResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_recent_partner/{buyer}/{seller}";
	}

// Queries a list of HyRecentImport items.
	rpc HyRecentImport(QueryHyRecentImportRequest) returns (QueryHyRecentImportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_recent_import/{name}/{group}";
	}

// Queries a list of HyRecentExport items.
	rpc HyRecentExport(QueryHyRecentExportRequest) returns (QueryHyRecentExportResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_recent_export/{name}/{group}";
	}

// Queries a list of HyDomesticMarketShare items.
	rpc HyDomesticMarketShare(QueryHyDomesticMarketShareRequest) returns (QueryHyDomesticMarketShareResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_domestic_market_share/{name}/{group}";
	}

// Queries a list of HyCompetition items.
	rpc HyCompetition(QueryHyCompetitionRequest) returns (QueryHyCompetitionResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_competition/{name}/{group}";
	}

// Queries a list of HyTradeDependency items.
	rpc HyTradeDependency(QueryHyTradeDependencyRequest) returns (QueryHyTradeDependencyResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_trade_dependency/{name}/{group}";
	}

// Queries a list of HyQuality items.
	rpc HyQuality(QueryHyQualityRequest) returns (QueryHyQualityResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_quality/{name}/{group}";
	}

// Queries a list of HyProtectionism items.
	rpc HyProtectionism(QueryHyProtectionismRequest) returns (QueryHyProtectionismResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_protectionism/{name}/{group}";
	}

// Queries a list of HySuccess items.
	rpc HySuccess(QueryHySuccessRequest) returns (QueryHySuccessResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_success/{name}/{group}";
	}

// Queries a list of HyAllValuesOf items.
	rpc HyAllValuesOf(QueryHyAllValuesOfRequest) returns (QueryHyAllValuesOfResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_all_values_of/{name}/{group}";
	}

// Queries a list of HyAllNamesOf items.
	rpc HyAllNamesOf(QueryHyAllNamesOfRequest) returns (QueryHyAllNamesOfResponse) {
		option (google.api.http).get = "/khidi/khidi/hy_all_names_of/{group}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetHyMarketsizeRequest {
	  string index = 1;

}

message QueryGetHyMarketsizeResponse {
	HyMarketsize hyMarketsize = 1 [(gogoproto.nullable) = false];
}

message QueryAllHyMarketsizeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllHyMarketsizeResponse {
	repeated HyMarketsize hyMarketsize = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetHyPartnerRequest {
	  string index = 1;

}

message QueryGetHyPartnerResponse {
	HyPartner hyPartner = 1 [(gogoproto.nullable) = false];
}

message QueryAllHyPartnerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllHyPartnerResponse {
	repeated HyPartner hyPartner = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetHyImportRequest {
	  string index = 1;

}

message QueryGetHyImportResponse {
	HyImport hyImport = 1 [(gogoproto.nullable) = false];
}

message QueryAllHyImportRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllHyImportResponse {
	repeated HyImport hyImport = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetHyExportRequest {
	  string index = 1;

}

message QueryGetHyExportResponse {
	HyExport hyExport = 1 [(gogoproto.nullable) = false];
}

message QueryAllHyExportRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllHyExportResponse {
	repeated HyExport hyExport = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryHyRecentMarketsizeRequest {
  string name = 1;
  string group = 2;
}

message QueryHyRecentMarketsizeResponse {
  string volume = 1;
}

message QueryHyRecentPartnerRequest {
  string buyer = 1;
  string seller = 2;
}

message QueryHyRecentPartnerResponse {
  string volume = 1;
}

message QueryHyRecentImportRequest {
  string name = 1;
  string group = 2;
}

message QueryHyRecentImportResponse {
  string volume = 1;
}

message QueryHyRecentExportRequest {
  string name = 1;
  string group = 2;
}

message QueryHyRecentExportResponse {
  string volume = 1;
}

message QueryHyDomesticMarketShareRequest {
  string name = 1;
  string group = 2;
}

message QueryHyDomesticMarketShareResponse {
  string value = 1;
}

message QueryHyCompetitionRequest {
  string name = 1;
  string group = 2;
}

message QueryHyCompetitionResponse {
  string value = 1;
}

message QueryHyTradeDependencyRequest {
  string name = 1;
  string group = 2;
}

message QueryHyTradeDependencyResponse {
  string value = 1;
}

message QueryHyQualityRequest {
  string name = 1;
  string group = 2;
}

message QueryHyQualityResponse {
  string value = 1;
}

message QueryHyProtectionismRequest {
  string name = 1;
  string group = 2;
}

message QueryHyProtectionismResponse {
  string value = 1;
}

message QueryHySuccessRequest {
  string name = 1;
  string group = 2;
}

message QueryHySuccessResponse {
  string value = 1;
}

message QueryHyAllValuesOfRequest {
  string name = 1;
  string group = 2;
}

message QueryHyAllValuesOfResponse {
  string recentMarketsize = 1;
  string recentImport = 2;
  string recentExport = 3;
  string domesticMarketShare = 4;
  string competition = 5;
  string tradeDependency = 6;
  string quality = 7;
  string protectionism = 8;
  string success = 9;
}

message QueryHyAllNamesOfRequest {
  string group = 1;
}

message QueryHyAllNamesOfResponse {
  repeated HyAllNamesOf HyAllNamesOf = 1;
}

// this line is used by starport scaffolding # 3
